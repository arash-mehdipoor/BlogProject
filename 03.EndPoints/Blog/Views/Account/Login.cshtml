@using Blog.Application.Users.Queries.Login
@model  LoginUserQuery

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<h4>LoginUserQuery</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-danger">
                <span>@TempData["Message"]</span>
            </div>
        }
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <input type="hidden" asp-for="ReturnUrl" class="form-control" />
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
